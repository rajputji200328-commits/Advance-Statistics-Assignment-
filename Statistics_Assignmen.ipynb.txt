{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "5d7763c2",
      "metadata": {
        "id": "5d7763c2"
      },
      "source": [
        "# Statistics Advanced - 1 Assignment Solutions\n",
        "This notebook contains answers, Python code, and outputs for all questions."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "599fe46c",
      "metadata": {
        "id": "599fe46c"
      },
      "source": [
        "\n",
        "### Q1: What is a random variable in probability theory?\n",
        "A random variable in probability theory is a numerical outcome of a random process. It assigns a real number to each possible outcome of a random experiment.\n",
        "\n",
        "### Q2: What are the types of random variables?\n",
        "There are two main types of random variables:  \n",
        "1. **Discrete Random Variables**: Take on a countable number of values (e.g., number of heads in coin tosses).  \n",
        "2. **Continuous Random Variables**: Take values from an interval or continuum (e.g., height, weight).\n",
        "\n",
        "### Q3: Difference between discrete and continuous distributions\n",
        "- **Discrete distributions** describe variables with countable outcomes (e.g., Binomial distribution).  \n",
        "- **Continuous distributions** describe variables with uncountably infinite outcomes within a range (e.g., Normal distribution).\n",
        "\n",
        "### Q4: What is a binomial distribution, and how is it used in probability?\n",
        "A binomial distribution represents the number of successes in a fixed number of independent Bernoulli trials, each with the same probability of success.  \n",
        "It is widely used in scenarios with two possible outcomes (success/failure).\n",
        "\n",
        "### Q5: What is the standard normal distribution, and why is it important?\n",
        "The standard normal distribution is a normal distribution with mean 0 and standard deviation 1.  \n",
        "It is important because many statistical tests and confidence intervals are based on it.\n",
        "\n",
        "### Q6: What is the Central Limit Theorem (CLT), and why is it critical in statistics?\n",
        "The CLT states that the sampling distribution of the sample mean approaches a normal distribution as the sample size increases, regardless of the population distribution.  \n",
        "It is critical because it justifies the use of normal approximation in many statistical procedures.\n",
        "\n",
        "### Q7: What is the significance of confidence intervals in statistical analysis?\n",
        "Confidence intervals provide a range of values within which the true population parameter is likely to lie.  \n",
        "They are significant because they measure estimation uncertainty.\n",
        "\n",
        "### Q8: What is the concept of expected value in a probability distribution?\n",
        "The expected value is the long-term average outcome of a random variable.  \n",
        "It is calculated by summing or integrating the values multiplied by their probabilities.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "e7ce05ce",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "e7ce05ce",
        "outputId": "35648df9-9439-4136-8cea-e05ebbda98bc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean: 50.096660279111624\n",
            "Standard Deviation: 4.893631038736771\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Generate data\n",
        "np.random.seed(42)\n",
        "data = np.random.normal(50, 5, 1000)\n",
        "\n",
        "# Compute statistics\n",
        "mean_val = np.mean(data)\n",
        "std_val = np.std(data)\n",
        "\n",
        "print(\"Mean:\", mean_val)\n",
        "print(\"Standard Deviation:\", std_val)\n",
        "\n",
        "# Plot histogram\n",
        "plt.hist(data, bins=30, edgecolor=\"black\")\n",
        "plt.title(\"Histogram of Normally Distributed Data\")\n",
        "plt.xlabel(\"Value\")\n",
        "plt.ylabel(\"Frequency\")\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "a4e1e2a5",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "a4e1e2a5",
        "outputId": "a178a945-c87a-4a4a-9577-d83a51aa7259"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Sales: 248.25\n",
            "95% Confidence Interval: (np.float64(240.16957025147158), np.float64(256.3304297485284))\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "from scipy import stats\n",
        "\n",
        "# Given daily sales data\n",
        "daily_sales = [220, 245, 210, 265, 230, 250, 260, 275, 240, 255,\n",
        "               235, 260, 245, 250, 225, 270, 265, 255, 250, 260]\n",
        "\n",
        "# Mean and Standard Error\n",
        "mean_sales = np.mean(daily_sales)\n",
        "std_sales = np.std(daily_sales, ddof=1)\n",
        "n = len(daily_sales)\n",
        "se = std_sales / np.sqrt(n)\n",
        "\n",
        "# Confidence Interval\n",
        "confidence = 0.95\n",
        "h = se * stats.t.ppf((1 + confidence) / 2., n-1)\n",
        "ci_lower, ci_upper = mean_sales - h, mean_sales + h\n",
        "\n",
        "print(\"Mean Sales:\", mean_sales)\n",
        "print(\"95% Confidence Interval:\", (ci_lower, ci_upper))\n"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "language_info": {
      "name": "python"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}